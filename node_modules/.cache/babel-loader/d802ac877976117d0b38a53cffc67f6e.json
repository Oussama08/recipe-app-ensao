{"ast":null,"code":"import React, { createContext, Component } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nvar Context = createContext();\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar getStyles = function getStyles(_ref) {\n  var position = _ref.position,\n      zIndex = _ref.zIndex;\n\n  switch (position) {\n    case 'top left':\n      return {\n        position: 'fixed',\n        top: 0,\n        right: 'auto',\n        bottom: 'auto',\n        left: 0,\n        zIndex: zIndex\n      };\n\n    case 'top right':\n      return {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 'auto',\n        left: 'auto',\n        zIndex: zIndex\n      };\n\n    case 'bottom left':\n      return {\n        position: 'fixed',\n        top: 'auto',\n        right: 'auto',\n        bottom: 0,\n        left: 0,\n        zIndex: zIndex\n      };\n\n    case 'bottom right':\n      return {\n        position: 'fixed',\n        top: 'auto',\n        right: 0,\n        bottom: 0,\n        left: 'auto',\n        zIndex: zIndex\n      };\n\n    case 'top center':\n      return {\n        position: 'fixed',\n        top: 0,\n        right: 'auto',\n        bottom: 'auto',\n        left: '50%',\n        transform: 'translate(-50%, 0%)',\n        zIndex: zIndex\n      };\n\n    case 'bottom center':\n      return {\n        position: 'fixed',\n        top: 'auto',\n        right: 'auto',\n        bottom: 0,\n        left: '50%',\n        transform: 'translate(-50%, 0%)',\n        zIndex: zIndex\n      };\n  }\n};\n\nvar Wrapper = function (_Component) {\n  inherits(Wrapper, _Component);\n\n  function Wrapper() {\n    var _ref2;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Wrapper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref2 = Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).call.apply(_ref2, [this].concat(args))), _this), _this.styles = getStyles(_this.props.options), _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(Wrapper, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          options = _props.options,\n          props = objectWithoutProperties(_props, ['children', 'options']);\n      return React.createElement('div', _extends({\n        style: this.styles\n      }, props), children);\n    }\n  }]);\n  return Wrapper;\n}(Component);\n\nvar duration = 250;\nvar defaultStyle = {\n  fade: {\n    transition: 'opacity ' + duration + 'ms ease',\n    opacity: 0\n  },\n  scale: {\n    transform: 'scale(1)',\n    transition: 'all ' + duration + 'ms ease-in-out'\n  }\n};\nvar transitionStyles = {\n  fade: {\n    entering: {\n      opacity: 0\n    },\n    entered: {\n      opacity: 1\n    }\n  },\n  scale: {\n    entering: {\n      transform: 'scale(0)'\n    },\n    entered: {\n      transform: 'scale(1)'\n    },\n    exiting: {\n      transform: 'scale(0)'\n    },\n    exited: {\n      transform: 'scale(1)'\n    }\n  }\n};\n\nvar Transtion = function Transtion(_ref) {\n  var children = _ref.children,\n      type = _ref.type,\n      props = objectWithoutProperties(_ref, ['children', 'type']);\n  return React.createElement(Transition, _extends({}, props, {\n    timeout: duration\n  }), function (state) {\n    return React.createElement('div', {\n      style: _extends({}, defaultStyle[type], transitionStyles[type][state])\n    }, children);\n  });\n};\n\nvar Provider = function (_Component) {\n  inherits(Provider, _Component);\n\n  function Provider() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Provider);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Provider.__proto__ || Object.getPrototypeOf(Provider)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      root: null,\n      alerts: []\n    }, _this.timerId = [], _this.show = function () {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var id = Math.random().toString(36).substr(2, 9);\n      var _this$props = _this.props,\n          timeout = _this$props.timeout,\n          type = _this$props.type;\n\n      var alertOptions = _extends({\n        timeout: timeout,\n        type: type\n      }, options);\n\n      var alert = {\n        id: id,\n        message: message,\n        options: alertOptions\n      };\n\n      alert.close = function () {\n        return _this.remove(alert);\n      };\n\n      if (alert.options.timeout) {\n        var timerId = setTimeout(function () {\n          _this.remove(alert);\n\n          _this.timerId.splice(_this.timerId.indexOf(timerId), 1);\n        }, alert.options.timeout);\n\n        _this.timerId.push(timerId);\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          alerts: prevState.alerts.concat(alert)\n        };\n      }, function () {\n        alert.options.onOpen && alert.options.onOpen();\n      });\n\n      return alert;\n    }, _this.remove = function (alert) {\n      _this.setState(function (prevState) {\n        var lengthBeforeRemove = prevState.alerts.length;\n        var alerts = prevState.alerts.filter(function (a) {\n          return a.id !== alert.id;\n        });\n\n        if (lengthBeforeRemove > alerts.length && alert.options.onClose) {\n          alert.options.onClose();\n        }\n\n        return {\n          alerts: alerts\n        };\n      });\n    }, _this.success = function () {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.type = 'success';\n      return _this.show(message, options);\n    }, _this.error = function () {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.type = 'error';\n      return _this.show(message, options);\n    }, _this.info = function () {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.type = 'info';\n      return _this.show(message, options);\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(Provider, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var root = document.createElement('div');\n      document.body.appendChild(root);\n      this.setState({\n        root: root\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.timerId.forEach(clearTimeout);\n      var root = this.state.root;\n      if (root) document.body.removeChild(root);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          root = _state.root,\n          alerts = _state.alerts;\n      var _props = this.props,\n          children = _props.children,\n          offset = _props.offset,\n          position = _props.position,\n          timeout = _props.timeout,\n          type = _props.type,\n          transition = _props.transition,\n          zIndex = _props.zIndex,\n          AlertComponent = _props.template;\n      var options = {\n        offset: offset,\n        position: position,\n        timeout: timeout,\n        type: type,\n        transition: transition,\n        zIndex: zIndex\n      };\n\n      var alert = _extends({}, this.state, {\n        show: this.show,\n        remove: this.remove,\n        success: this.success,\n        error: this.error,\n        info: this.info\n      });\n\n      return React.createElement(Context.Provider, {\n        value: alert\n      }, children, root && createPortal(React.createElement(Wrapper, {\n        options: options\n      }, React.createElement(TransitionGroup, null, alerts.map(function (alert) {\n        return React.createElement(Transtion, {\n          type: options.transition,\n          key: alert.id\n        }, React.createElement(AlertComponent, _extends({\n          style: {\n            margin: options.offset\n          }\n        }, alert)));\n      }))), root));\n    }\n  }]);\n  return Provider;\n}(Component);\n\nProvider.propTypes = {\n  offset: PropTypes.string,\n  position: PropTypes.oneOf(['top left', 'top right', 'top center', 'bottom left', 'bottom right', 'bottom center']),\n  timeout: PropTypes.number,\n  type: PropTypes.oneOf(['info', 'success', 'error']),\n  transition: PropTypes.oneOf(['fade', 'scale']),\n  zIndex: PropTypes.number,\n  template: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nProvider.defaultProps = {\n  offset: '10px',\n  position: 'top center',\n  timeout: 0,\n  type: 'info',\n  transition: 'fade',\n  zIndex: 100\n};\nvar Alert = Context.Consumer;\n\nvar withAlert = function withAlert(WrappedComponent) {\n  var WithAlert = function (_Component) {\n    inherits(WithAlert, _Component);\n\n    function WithAlert() {\n      classCallCheck(this, WithAlert);\n      return possibleConstructorReturn(this, (WithAlert.__proto__ || Object.getPrototypeOf(WithAlert)).apply(this, arguments));\n    }\n\n    createClass(WithAlert, [{\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        return React.createElement(Context.Consumer, null, function (alert) {\n          return React.createElement(WrappedComponent, _extends({}, _this2.props, {\n            alert: alert\n          }));\n        });\n      }\n    }]);\n    return WithAlert;\n  }(Component);\n\n  WithAlert.displayName = 'WithAlert(' + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + ')';\n  return WithAlert;\n};\n\nexport { Provider, Alert, withAlert };","map":null,"metadata":{},"sourceType":"module"}