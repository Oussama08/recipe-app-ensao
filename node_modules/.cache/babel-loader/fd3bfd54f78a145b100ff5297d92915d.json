{"ast":null,"code":"import React from 'react';\n\nvar BaseIcon = function BaseIcon(_ref) {\n  var color = _ref.color,\n      _ref$pushRight = _ref.pushRight,\n      pushRight = _ref$pushRight === undefined ? true : _ref$pushRight,\n      children = _ref.children;\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: '24',\n    height: '24',\n    viewBox: '0 0 24 24',\n    fill: 'none',\n    stroke: color,\n    strokeWidth: '2',\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n    style: {\n      marginRight: pushRight ? '20px' : '0',\n      minWidth: 24\n    }\n  }, children);\n};\n\nvar InfoIcon = function InfoIcon() {\n  return React.createElement(BaseIcon, {\n    color: '#2E9AFE'\n  }, React.createElement('circle', {\n    cx: '12',\n    cy: '12',\n    r: '10'\n  }), React.createElement('line', {\n    x1: '12',\n    y1: '16',\n    x2: '12',\n    y2: '12'\n  }), React.createElement('line', {\n    x1: '12',\n    y1: '8',\n    x2: '12',\n    y2: '8'\n  }));\n};\n\nvar SuccessIcon = function SuccessIcon() {\n  return React.createElement(BaseIcon, {\n    color: '#31B404'\n  }, React.createElement('path', {\n    d: 'M22 11.08V12a10 10 0 1 1-5.93-9.14'\n  }), React.createElement('polyline', {\n    points: '22 4 12 14.01 9 11.01'\n  }));\n};\n\nvar ErrorIcon = function ErrorIcon() {\n  return React.createElement(BaseIcon, {\n    color: '#FF0040'\n  }, React.createElement('circle', {\n    cx: '12',\n    cy: '12',\n    r: '10'\n  }), React.createElement('line', {\n    x1: '12',\n    y1: '8',\n    x2: '12',\n    y2: '12'\n  }), React.createElement('line', {\n    x1: '12',\n    y1: '16',\n    x2: '12',\n    y2: '16'\n  }));\n};\n\nvar CloseIcon = function CloseIcon() {\n  return React.createElement(BaseIcon, {\n    color: '#FFFFFF',\n    pushRight: false\n  }, React.createElement('line', {\n    x1: '18',\n    y1: '6',\n    x2: '6',\n    y2: '18'\n  }), React.createElement('line', {\n    x1: '6',\n    y1: '6',\n    x2: '18',\n    y2: '18'\n  }));\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar alertStyle = {\n  backgroundColor: '#151515',\n  color: 'white',\n  padding: '10px',\n  textTransform: 'uppercase',\n  borderRadius: '3px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\n  fontFamily: 'Arial',\n  width: '300px',\n  boxSizing: 'border-box'\n};\nvar buttonStyle = {\n  marginLeft: '20px',\n  border: 'none',\n  backgroundColor: 'transparent',\n  cursor: 'pointer',\n  color: '#FFFFFF'\n};\n\nvar AlertTemplate = function AlertTemplate(_ref) {\n  var message = _ref.message,\n      options = _ref.options,\n      style = _ref.style,\n      close = _ref.close;\n  return React.createElement('div', {\n    style: _extends({}, alertStyle, style)\n  }, options.type === 'info' && React.createElement(InfoIcon, null), options.type === 'success' && React.createElement(SuccessIcon, null), options.type === 'error' && React.createElement(ErrorIcon, null), React.createElement('span', {\n    style: {\n      flex: 2\n    }\n  }, message), React.createElement('button', {\n    onClick: close,\n    style: buttonStyle\n  }, React.createElement(CloseIcon, null)));\n};\n\nexport default AlertTemplate;","map":null,"metadata":{},"sourceType":"module"}